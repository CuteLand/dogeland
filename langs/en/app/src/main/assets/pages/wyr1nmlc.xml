<?xml version="1.0" encoding="UTF-8" ?>
<!-- SettingsPage -->
<page>
 <group title="Basic">
     <action>
         <title>Rootfs</title>
             <param name="Input" label="" title="" placeholder="/data/data/me.flytree.dogeland/files/linux/" type="text" />
            <set>$TOOLKIT/app-addon/set_all.sh set_rootfsdir</set>
             </action>
        <action>
            <title>Initialize command line</title>
            <param name="Input" label="" title="" placeholder="/bin/sh" type="text" />
            <set>$TOOLKIT/app-addon/set_all.sh set_initcmd</set>
        </action>
          <action>
            <title>LinuxAddon StartSetting</title>
             <param name="type">
                <option value="/bin/sh /dogeland/cli.sh sshd_start">Start openssh-sshd</option>
                <option value="/bin/sh /dogeland/cli.sh dropbear_start">Start dropbear</option>
                <option value="/bin/sh /dogeland/cli.sh vncserver_start">Start vncserver</option>
            </param>
            <set>
            rm -rf $CONFIG_DIR/cmd.conf
            echo "$type">$CONFIG_DIR/cmd.conf
            </set>
             </action>
          </group>
       <group title="Advanced">
         <action bg-task="true">
            <title>Open notification resident</title>
            <desc>Keep the application running in the foreground and the CPU waking up to prevent the container from freezing or being killed</desc>
            <set>sleep 9999</set>
        </action>
        <action>
            <title>Backup Rootfs</title>
             <param name="dir" type="folder" value="/sdcard/Android/data/me.flytree.dogeland/" editable="true"/>
            <set>$TOOLKIT/cli.sh backup_rootfs</set>
        </action>
         <action>
            <title>Upload file to container</title>
            <param name="file" label="Select a File" type="file" value="" editable="true" />
            <set>$TOOLKIT/cli.sh filetran_send</set>
        </action>
        <action>
            <title>Receive file from container</title>
             <param name="savedir" label="" title="Choose save directory" placeholder="$DATA2_DIR/filetran/" type="text" editable="true" />
            <set>$TOOLKIT/cli.sh filetran_receive</set>
        </action>
        <action>
            <title>Export Logs</title>
            <set>$TOOLKIT/app-addon/env_info.sh</set>
        </action>
             <action warning="This will delete the system and user data on the container, and the operation is irreversible. Do you still want to continue?">
            <title>Remove installed Rootfs</title>
            <set>$TOOLKIT/cli.sh del_rootfs</set>
        </action>
        <action>
            <title>Set up a custom PATH environment</title>
            <param name="Input" label="" title="" placeholder="/bin:/usr/sbin(Leave blank to close)" type="text" />
            <set>
            echo "$Input">$DATA2_DIR/custom_path.conf
            if [[ "$Input" != "" ]]
            then
            echo "">/dev/null
            else
            rm -rf $DATA2_DIR/custom_path.conf
            fi
            </set>
        </action>
         <action>
            <title>Enable QEMU-USER Support</title>
             <param name="qemu">
                <option value="aarch64">qemu-user-aarch64</option>
                <option value="arm">qemu-user-arm</option>
                <option value="x86_64">qemu-user-x86_64</option>
                <option value="x86">qemu-user-x86</option>
                <option value="0">Disable</option>
            </param>
            <set>$TOOLKIT/app-addon/set_all.sh set_emulator_qemu</set>
        </action>
    </group>
    <group title="PRoot">
    <action>
            <title>Enable FakeKernel</title>
             <param name="kernel" label="" title="" placeholder="5.4.0-fakehost(Leave blank to close)" type="text" />
            <set>$TOOLKIT/cli.sh enable_proot_fakekernel</set>
        </action>
      <action>
            <title>Enable DebugMessage</title>
             <param name="data" label="" title="Output level" placeholder="(The larger the value, the more output, leave blank to close)" type="text" />
            <set>
            echo "$data">$CONFIG_DIR/.debug
            if [[ "$data" != "" ]]
            then
            echo "">/dev/null
            else
            rm -rf $CONFIG_DIR/.debug
            fi
            </set>
       </action>
    </group>
     <group title="Other">
            <action>
            <title>Change GNU / Linux system password/title>
            <param name="username" label="" title="User" placeholder="" type="text" />
            <param name="password" label="" title="Password" placeholder="" type="text" />
            <set>$TOOLKIT/cli.sh edit_passwd</set>
        </action>
          <action>
            <title>Repair operating environment permissions</title>
            <set>chmod -R 0777 $TOOLKIT/*</set>
        </action>
        <action warning="Note for non-root users: This operation will kill the running system, please save the data before continuing (chroot users are free)">
            <title>KillApp</title>
            <set>
            $TOOLKIT/proot -r $TOOLKIT -b /system -b /proc -b /sys -b /dev -b /apex -b /vendor /busybox pkill $PACKAGE_NAME
            pkill $PACKAGE_NAME
            </set>
        </action>
        <action warning="This function provides a static ssh service for the installed Rootfs. The purpose is for the container shell in other images. It only supports ARM64 or simulates ARM64. It may cause irreversible consequences. Are you sure you want to continue to enable it?">
            <title>[Experimental] Use pre-compiled dropbear</title>
            <set>
           echo "- install dropbear ..."
           cp $TOOLKIT/dropbearmulti_arm64 $rootfs/bin/dropbear
           cp $TOOLKIT/dropbearmulti_arm64 $rootfs/bin/dropbearkey
           chmod 0770 $rootfs/bin/dropbear
           chmod 0770 $rootfs/bin/dropbearkey
           echo "- update config ..."
           rm -rf $CONFIG_DIR/cmd.conf
           echo "/bin/sh /dogeland/cli.sh dropbear_start">$CONFIG_DIR/cmd.conf
           echo "done!"
            </set>
        </action>
    </group>
    </page>